* New Emacs Configuration for Efficient Grad Student Workflow

This open-source Emacs configuration aims to provide a productive environment for graduate students by enhancing workflow efficiency, minimizing distractions, and incorporating key tools used for research, programming, and document writing.

This configuration supports:
- Efficient text editing with useful key bindings
- Integrated version control (Git) with real-time updates
- Easy access to programming environments (Python, R, LaTeX)
- Code completion, snippets, and quick navigation
- Distraction-free writing mode for research and paper writing
- Window management for multitasking

** Getting Started

1. **Clone the repository**:
   Clone this configuration from the GitHub repository:
   #+BEGIN_SRC bash
   git clone https://github.com/alkhaldieid/new_emacs.git ~/.emacs.d
   #+END_SRC

2. **Install Emacs**:
   Ensure that you have Emacs installed on your system. You can install Emacs using your package manager:
   - For Ubuntu: `sudo apt install emacs`
   - For macOS: `brew install emacs`
   - For Windows: Download from [Emacs for Windows](https://www.gnu.org/software/emacs/download.html).

3. **Install Required Packages**:
   This configuration uses `use-package` for package management. Run Emacs, and it will automatically install all required packages. If needed, install `use-package` manually:
   #+BEGIN_SRC emacs-lisp
   (require 'package)
   (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
   (package-initialize)
   (unless (package-installed-p 'use-package)
     (package-refresh-contents)
     (package-install 'use-package))
   #+END_SRC

** Key Features and Configurations

*** Evil Mode
Emacs with Vim keybindings, bringing the best of both worlds. This mode makes it easier for users transitioning from Vim to Emacs.
#+BEGIN_SRC emacs-lisp
(use-package evil
  :config
  (evil-mode 1))
#+END_SRC

*** Window Management (Eyebrowse)
For multitasking, you can easily switch between workspaces using Eyebrowse. This allows you to manage multiple Emacs windows effectively.
#+BEGIN_SRC emacs-lisp
(use-package eyebrowse
  :diminish eyebrowse-mode
  :config
  (eyebrowse-mode t)
  (setq eyebrowse-new-workspace t))
#+END_SRC

*** Which-key Mode
Which-key displays possible keybindings in a popup as you type, helping you remember Emacs key combinations.
#+BEGIN_SRC emacs-lisp
(use-package which-key
  :config
  (setq which-key-idle-delay 0.3)
  (which-key-mode))
#+END_SRC

*** Yasnippet
Yasnippet allows you to insert commonly used snippets of code and text efficiently, perfect for programming and writing papers.
#+BEGIN_SRC emacs-lisp
(use-package yasnippet
  :config
  (yas-global-mode 1))
#+END_SRC

*** Distraction-Free Writing (Visual Fill Column)
Enables a focused, distraction-free writing experience by wrapping the text to fit within a specified column.
#+BEGIN_SRC emacs-lisp
(use-package visual-fill-column
  :config
  (global-visual-fill-column-mode 1))
#+END_SRC

*** Company Mode (Auto-completion)
Company-mode provides intelligent, context-aware auto-completion for various programming languages.
#+BEGIN_SRC emacs-lisp
(use-package company
  :config
  (global-company-mode 1))
#+END_SRC

*** Version Control (Magit and Git Gutter)
Magit offers a complete Git interface within Emacs, while Git Gutter provides real-time Git diff information in the gutter as you edit files.
#+BEGIN_SRC emacs-lisp
(use-package magit)
(use-package git-gutter
  :config
  (global-git-gutter-mode 1))
#+END_SRC

*** Programming Support
This Emacs configuration includes support for several programming languages, including Python and R, making it an ideal tool for scientific computing and data analysis.

**** Python Integration
With `elpy`, `jedi`, and `company`, this setup provides a full Python development environment with features like code completion, linting, and virtual environment support.
#+BEGIN_SRC emacs-lisp
(use-package elpy
  :config
  (elpy-enable))
#+END_SRC

**** R Language Support (ESS)
Emacs Speaks Statistics (ESS) provides a rich environment for working with R, ideal for data analysis and statistical modeling.
#+BEGIN_SRC emacs-lisp
(use-package ess)
#+END_SRC

** Productivity Tools

*** Openwith
Automatically open external files (like PDFs, videos, etc.) with their respective applications.
#+BEGIN_SRC emacs-lisp
(use-package openwith
  :config
  (openwith-mode t))
#+END_SRC

** Custom Keybindings
This configuration includes several custom keybindings for quick access to essential features:
- **Switch workspaces**: `C-w` followed by `j`, `k`, `l`, etc.
- **Open Magit**: `C-x g`
- **Access Git Gutter**: `C-x v g`

** Conclusion
This Emacs configuration is designed to streamline the workflow for graduate students, enabling them to focus on research, writing, and coding. The combination of distraction-free modes, version control integration, and advanced programming support makes it a powerful tool for academic work.

Feel free to fork the repository and customize it further for your own needs!

** License
This project is licensed under the MIT License.
